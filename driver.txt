generic driver notes, using Minix 3.4.0 as of 28/7/24

	usbd = usb daemon
	libusb = usb lib (from minix/usb.h and usb.c


/usr/src/minix/drivers/examples/hello uses sef functions
and
/usr/src/minix/driver/net/e1000 uses netdriver to encase sef 

ddekit
	/usr/src/minix/driver/usb/usbd/base/usbd.c
		50: usbd_init_hcd() -> 168: ddekit_init() ->	

styding 
 /usr/src/minix/include/minix/usb.c and usb.h 
 chat - improvement for int usb_send_urb(struct usb_urb* urb)
   #include <minix/mutex.h>
    minix_mutex_lock(&pending_urbs_mutex);
    urb->next = pending_urbs;
    pending_urbs = urb;
    minix_mutex_unlock(&pending_urbs_mutex);

URB = USB Request Block
HCD = Host Controller Driver

///////////////////////////////////////////////////////////////////////////
e1000.conf
service e1000
{
	type net;
	descr "Intel PRO/1000 Gigabit";
        system
                UMAP            # 14
                IRQCTL          # 19
                DEVIO           # 21
        ;
        pci device      8086:100e;
        pci device      8086:100f;
        pci device      8086:101e;
        pci device      8086:107c;
        pci device      8086:109a;
        pci device      8086:10cd;
        pci device      8086:10d3;
        pci device      8086:10de;
        pci device      8086:105e;
        pci device      8086:150c;
        ipc
                SYSTEM pm rs log tty ds vm
                pci inet lwip ;
};
hello.conf
service hello
{
        system
                IRQCTL          # 19
                DEVIO           # 21
        ;
        ipc
                SYSTEM pm rs tty ds vm vfs
                pci inet lwip amddev
                ;
    uid 0;
};
///////////////////////////////////////////////////////////////////////////

e1000.c //main entry point

